@page "/tables";
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage session
@inject NavigationManager NavigationManager





<div class="row table" style="height:90vh; width:100%; margin-top:5vh; margin-bottom:5vh;">
    <div class="col-sm-2  text-center"></div>

    <div class="col-sm-8 " style="background-color:#f1f1f1; border: solid 1px black;align-items:center; padding:0; margin:0;">
        <table class="table" style="height:100%;">
            <tr>
                <td style="width:33%; text-align:center; vertical-align:middle"><h3 style="font-size:0.8rem;">Table Number</h3></td>
                <td style="width:33%"><input runat="server" style="box-sizing:border-box; width:100%; height:100%; font-size:2rem; text-align:center;" type="text" name="txt_no" id="txt_no" @bind="table_number"></td>
                <td style="width:33%"><input runat="server" @onclick="OpenTable" id="Button2" class="btn btn-success" type="button" name="btn_order" value="Open" style="width:100%; height:100%;  font-size:2rem;"></td>
            </tr>

            <tr>
                <td><input @onclick="@(() => write_number("1"))" id="Button3" class="btn btn-info" type="button" name="btn_order" value="1" style="width:100%; height:100%; font-size:2rem;"></td>
                <td><input @onclick="@(() => write_number("2"))" id="Button4" class="btn btn-info" type="button" name="btn_order" value="2" style="width:100%; height:100%; font-size:2rem;"></td>
                <td><input @onclick="@(() => write_number("3"))" id="Button5" class="btn btn-info" type="button" name="btn_order" value="3" style="width:100%; height:100%; font-size:2rem;"></td>
            </tr>

            <tr>
                <td><input @onclick="@(() => write_number("4"))" id="Button6" class="btn btn-info" type="button" name="btn_order" value="4" style="width:100%; height:100%; font-size:2rem;"></td>
                <td><input @onclick="@(() => write_number("5"))" id="Button7" class="btn btn-info" type="button" name="btn_order" value="5" style="width:100%; height:100%; font-size:2rem;"></td>
                <td><input @onclick="@(() => write_number("6"))" id="Button8" class="btn btn-info" type="button" name="btn_order" value="6" style="width:100%; height:100%; font-size:2rem;"></td>
            </tr>

            <tr>
                <td><input @onclick="@(() => write_number("7"))" id="Button9" class="btn btn-info" type="button" name="btn_order" value="7" style="width:100%; height:100%; font-size:2rem;"></td>
                <td><input @onclick="@(() => write_number("8"))" id="Button10" class="btn btn-info" type="button" name="btn_order" value="8" style="width:100%; height:100%; font-size:2rem;"></td>
                <td><input @onclick="@(() => write_number("9"))" id="Button11" class="btn btn-info" type="button" name="btn_order" value="9" style="width:100%; height:100%; font-size:2rem;"></td>
            </tr>

            <tr>
                <td><input @onclick="@(() => write_number("0"))" id="Button12" class="btn btn-info" type="button" name="btn_order" value="0" style="width:100%; height:100%; font-size:2rem;"></td>
                <td colspan="2"><input @onclick="@(() => write_number("undo"))" id="Button13" type="button" name="btn_order" value="Undo" style="width:100%; height:100%; font-size:2rem;"></td>
            </tr>

            <tr>
                <td colspan="3">
                    <input runat="server" @onclick="LogOut" id="Button14" type="button" name="btn_back" value="Back" style="width:49%; height:100%; font-size:2rem;">
                    <input runat="server" @onclick="about_tables"  onserverclick="table_info_ServerClick" id="Button15" type="button" name="btn_about_table" value="Table Info" style="width:50%; height:100%; font-size:2rem;">
                </td>
            </tr>

        </table>
    </div>



   
</div>







@code {



    protected async override Task OnInitializedAsync()




    {
        try

        {
            var res = await session.GetAsync<int>("ID");
            if (!res.Success)
            {
                NavigationManager.NavigateTo("/");
            }
        }
        catch(Exception ex) { NavigationManager.NavigateTo("/"); }
    }

    string table_number = "";
    void write_number(string s)
    {
        if (s == "undo")
        {
            try
            {
                table_number = table_number.Remove(table_number.Length - 1);
            }
            catch (Exception)
            {


            }
            return;
        }
        table_number = table_number + s;
        if (Convert.ToInt16(table_number) > 99) table_number = "99";


    }
    async Task OpenTable()
    {
        if(table_number != "")
        {
            await session.SetAsync("tbl_number", table_number);
            NavigationManager.NavigateTo("orders");
        }
    }

    async Task LogOut() {
        await session.DeleteAsync("ID");
        await session.DeleteAsync("PER");
        NavigationManager.NavigateTo("/");
    }
    void about_tables()
    {


        NavigationManager.NavigateTo("about_table");

    }
}
